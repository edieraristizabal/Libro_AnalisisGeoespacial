Traceback (most recent call last):
  File "C:\Users\edier\miniconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\edier\AppData\Roaming\Python\Python311\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\edier\miniconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests
url = 'http://data.insideairbnb.com/united-states/'\
      'ca/san-diego/2016-07-07/visualisations/'\
      'neighbourhoods.geojson'
r = requests.get(url)
with open('neighbourhoods.geojson', 'wb') as fo:
    fo.write(r.content)
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mgaierror[0m                                  Traceback (most recent call last)
File [1;32m~\miniconda3\Lib\site-packages\urllib3\connection.py:174[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    173[0m [38;5;28;01mtry[39;00m:
[1;32m--> 174[0m     conn [38;5;241m=[39m [43mconnection[49m[38;5;241;43m.[39;49m[43mcreate_connection[49m[43m([49m
[0;32m    175[0m [43m        [49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_dns_host[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mport[49m[43m)[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mextra_kw[49m
[0;32m    176[0m [43m    [49m[43m)[49m
[0;32m    178[0m [38;5;28;01mexcept[39;00m SocketTimeout:

File [1;32m~\miniconda3\Lib\site-packages\urllib3\util\connection.py:72[0m, in [0;36mcreate_connection[1;34m(address, timeout, source_address, socket_options)[0m
[0;32m     68[0m     [38;5;28;01mreturn[39;00m six[38;5;241m.[39mraise_from(
[0;32m     69[0m         LocationParseError([38;5;124mu[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m, label empty or too long[39m[38;5;124m"[39m [38;5;241m%[39m host), [38;5;28;01mNone[39;00m
[0;32m     70[0m     )
[1;32m---> 72[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43msocket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[43msocket[49m[38;5;241;43m.[39;49m[43mSOCK_STREAM[49m[43m)[49m:
[0;32m     73[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

File [1;32m~\miniconda3\Lib\socket.py:962[0m, in [0;36mgetaddrinfo[1;34m(host, port, family, type, proto, flags)[0m
[0;32m    961[0m addrlist [38;5;241m=[39m []
[1;32m--> 962[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43m_socket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[38;5;28;43mtype[39;49m[43m,[49m[43m [49m[43mproto[49m[43m,[49m[43m [49m[43mflags[49m[43m)[49m:
[0;32m    963[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

[1;31mgaierror[0m: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

[1;31mNewConnectionError[0m                        Traceback (most recent call last)
File [1;32m~\miniconda3\Lib\site-packages\urllib3\connectionpool.py:714[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    713[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[1;32m--> 714[0m httplib_response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[0;32m    715[0m [43m    [49m[43mconn[49m[43m,[49m
[0;32m    716[0m [43m    [49m[43mmethod[49m[43m,[49m
[0;32m    717[0m [43m    [49m[43murl[49m[43m,[49m
[0;32m    718[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[0;32m    719[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[0;32m    720[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[0;32m    721[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[0;32m    722[0m [43m[49m[43m)[49m
[0;32m    724[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[0;32m    725[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[0;32m    726[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[0;32m    727[0m [38;5;66;03m# mess.[39;00m

File [1;32m~\miniconda3\Lib\site-packages\urllib3\connectionpool.py:415[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[0;32m    414[0m     [38;5;28;01melse[39;00m:
[1;32m--> 415[0m         [43mconn[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mhttplib_request_kw[49m[43m)[49m
[0;32m    417[0m [38;5;66;03m# We are swallowing BrokenPipeError (errno.EPIPE) since the server is[39;00m
[0;32m    418[0m [38;5;66;03m# legitimately able to close the connection after sending a valid response.[39;00m
[0;32m    419[0m [38;5;66;03m# With this behaviour, the received response is still readable.[39;00m

File [1;32m~\miniconda3\Lib\site-packages\urllib3\connection.py:244[0m, in [0;36mHTTPConnection.request[1;34m(self, method, url, body, headers)[0m
[0;32m    243[0m     headers[[38;5;124m"[39m[38;5;124mUser-Agent[39m[38;5;124m"[39m] [38;5;241m=[39m _get_default_user_agent()
[1;32m--> 244[0m [38;5;28;43msuper[39;49m[43m([49m[43mHTTPConnection[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m[43m [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m)[49m

File [1;32m~\miniconda3\Lib\http\client.py:1286[0m, in [0;36mHTTPConnection.request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1285[0m [38;5;250m[39m[38;5;124;03m"""Send a complete request to the server."""[39;00m
[1;32m-> 1286[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_send_request[49m[43m([49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mbody[49m[43m,[49m[43m [49m[43mheaders[49m[43m,[49m[43m [49m[43mencode_chunked[49m[43m)[49m

File [1;32m~\miniconda3\Lib\http\client.py:1332[0m, in [0;36mHTTPConnection._send_request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1331[0m     body [38;5;241m=[39m _encode(body, [38;5;124m'[39m[38;5;124mbody[39m[38;5;124m'[39m)
[1;32m-> 1332[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mendheaders[49m[43m([49m[43mbody[49m[43m,[49m[43m [49m[43mencode_chunked[49m[38;5;241;43m=[39;49m[43mencode_chunked[49m[43m)[49m

File [1;32m~\miniconda3\Lib\http\client.py:1281[0m, in [0;36mHTTPConnection.endheaders[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1280[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[1;32m-> 1281[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_send_output[49m[43m([49m[43mmessage_body[49m[43m,[49m[43m [49m[43mencode_chunked[49m[38;5;241;43m=[39;49m[43mencode_chunked[49m[43m)[49m

File [1;32m~\miniconda3\Lib\http\client.py:1041[0m, in [0;36mHTTPConnection._send_output[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1040[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[1;32m-> 1041[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mmsg[49m[43m)[49m
[0;32m   1043[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1044[0m 
[0;32m   1045[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [1;32m~\miniconda3\Lib\http\client.py:979[0m, in [0;36mHTTPConnection.send[1;34m(self, data)[0m
[0;32m    978[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[1;32m--> 979[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[0;32m    980[0m [38;5;28;01melse[39;00m:

File [1;32m~\miniconda3\Lib\site-packages\urllib3\connection.py:205[0m, in [0;36mHTTPConnection.connect[1;34m(self)[0m
[0;32m    204[0m [38;5;28;01mdef[39;00m [38;5;21mconnect[39m([38;5;28mself[39m):
[1;32m--> 205[0m     conn [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_new_conn[49m[43m([49m[43m)[49m
[0;32m    206[0m     [38;5;28mself[39m[38;5;241m.[39m_prepare_conn(conn)

File [1;32m~\miniconda3\Lib\site-packages\urllib3\connection.py:186[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    185[0m [38;5;28;01mexcept[39;00m SocketError [38;5;28;01mas[39;00m e:
[1;32m--> 186[0m     [38;5;28;01mraise[39;00m NewConnectionError(
[0;32m    187[0m         [38;5;28mself[39m, [38;5;124m"[39m[38;5;124mFailed to establish a new connection: [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m e
[0;32m    188[0m     )
[0;32m    190[0m [38;5;28;01mreturn[39;00m conn

[1;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x00000216D3D92910>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

[1;31mMaxRetryError[0m                             Traceback (most recent call last)
File [1;32m~\miniconda3\Lib\site-packages\requests\adapters.py:667[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    666[0m [38;5;28;01mtry[39;00m:
[1;32m--> 667[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[0;32m    668[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[0;32m    669[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[0;32m    670[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[0;32m    671[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[0;32m    672[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    673[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    674[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    675[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    676[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[0;32m    677[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[0;32m    678[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[0;32m    679[0m [43m    [49m[43m)[49m
[0;32m    681[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [1;32m~\miniconda3\Lib\site-packages\urllib3\connectionpool.py:798[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    796[0m     e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, e)
[1;32m--> 798[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[0;32m    799[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43me[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[0;32m    800[0m [43m[49m[43m)[49m
[0;32m    801[0m retries[38;5;241m.[39msleep()

File [1;32m~\miniconda3\Lib\site-packages\urllib3\util\retry.py:592[0m, in [0;36mRetry.increment[1;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[0;32m    591[0m [38;5;28;01mif[39;00m new_retry[38;5;241m.[39mis_exhausted():
[1;32m--> 592[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, error [38;5;129;01mor[39;00m ResponseError(cause))
[0;32m    594[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)

[1;31mMaxRetryError[0m: HTTPConnectionPool(host='data.insideairbnb.com', port=80): Max retries exceeded with url: /united-states/ca/san-diego/2016-07-07/visualisations/neighbourhoods.geojson (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000216D3D92910>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))

During handling of the above exception, another exception occurred:

[1;31mConnectionError[0m                           Traceback (most recent call last)
Cell [1;32mIn[12], line 5[0m
[0;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mrequests[39;00m
[0;32m      2[0m url [38;5;241m=[39m [38;5;124m'[39m[38;5;124mhttp://data.insideairbnb.com/united-states/[39m[38;5;124m'[39m\
[0;32m      3[0m       [38;5;124m'[39m[38;5;124mca/san-diego/2016-07-07/visualisations/[39m[38;5;124m'[39m\
[0;32m      4[0m       [38;5;124m'[39m[38;5;124mneighbourhoods.geojson[39m[38;5;124m'[39m
[1;32m----> 5[0m r [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43murl[49m[43m)[49m
[0;32m      6[0m [38;5;28;01mwith[39;00m [38;5;28mopen[39m([38;5;124m'[39m[38;5;124mneighbourhoods.geojson[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mwb[39m[38;5;124m'[39m) [38;5;28;01mas[39;00m fo:
[0;32m      7[0m     fo[38;5;241m.[39mwrite(r[38;5;241m.[39mcontent)

File [1;32m~\miniconda3\Lib\site-packages\requests\api.py:73[0m, in [0;36mget[1;34m(url, params, **kwargs)[0m
[0;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[0;32m     64[0m 
[0;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[1;32m   (...)[0m
[0;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[0;32m     71[0m [38;5;124;03m    """[39;00m
[1;32m---> 73[0m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mget[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mparams[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [1;32m~\miniconda3\Lib\site-packages\requests\api.py:59[0m, in [0;36mrequest[1;34m(method, url, **kwargs)[0m
[0;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[0;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[0;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[0;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[1;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [1;32m~\miniconda3\Lib\site-packages\requests\sessions.py:589[0m, in [0;36mSession.request[1;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[0;32m    584[0m send_kwargs [38;5;241m=[39m {
[0;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[0;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[0;32m    587[0m }
[0;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[1;32m--> 589[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[0;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [1;32m~\miniconda3\Lib\site-packages\requests\sessions.py:703[0m, in [0;36mSession.send[1;34m(self, request, **kwargs)[0m
[0;32m    700[0m start [38;5;241m=[39m preferred_clock()
[0;32m    702[0m [38;5;66;03m# Send the request[39;00m
[1;32m--> 703[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[0;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[0;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [1;32m~\miniconda3\Lib\site-packages\requests\adapters.py:700[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    696[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[0;32m    697[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[0;32m    698[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[1;32m--> 700[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[0;32m    702[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:
[0;32m    703[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)

[1;31mConnectionError[0m: HTTPConnectionPool(host='data.insideairbnb.com', port=80): Max retries exceeded with url: /united-states/ca/san-diego/2016-07-07/visualisations/neighbourhoods.geojson (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000216D3D92910>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))

