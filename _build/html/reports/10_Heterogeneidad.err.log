Traceback (most recent call last):
  File "C:\Users\edier\miniconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\edier\AppData\Roaming\Python\Python311\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\edier\miniconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\edier\miniconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ax = neighborhoods.plot(color='k', 
                        alpha=0.5,
                        figsize=(12,6))
neighborhoods.merge(neighborhood_effects, how='left',
                    left_on='neighbourhood', 
                    right_index=True)\
                  .dropna(subset=['fixed_effect'])\
                  .plot('fixed_effect',
                        ax=ax)
ax.set_title("San Diego Neighborhood Fixed Effects")
plt.show()
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mKeyError[0m                                  Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\ipykernel_3440\62176321.py[0m in [0;36m?[1;34m()[0m
[0;32m      1[0m ax = neighborhoods.plot(color='k', 
[0;32m      2[0m                         [0malpha[0m[1;33m=[0m[1;36m0.5[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m      3[0m                         figsize=(12,6))
[1;32m----> 4[1;33m neighborhoods.merge(neighborhood_effects, how='left',
[0m[0;32m      5[0m                     [0mleft_on[0m[1;33m=[0m[1;34m'neighbourhood'[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m      6[0m                     right_index=True)\
[0;32m      7[0m                   [1;33m.[0m[0mdropna[0m[1;33m([0m[0msubset[0m[1;33m=[0m[1;33m[[0m[1;34m'fixed_effect'[0m[1;33m][0m[1;33m)[0m[0;31m\[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\miniconda3\Lib\site-packages\geopandas\geodataframe.py[0m in [0;36m?[1;34m(self, *args, **kwargs)[0m
[0;32m   1565[0m         [0mSee[0m [0mhttps[0m[1;33m:[0m[1;33m//[0m[0mpandas[0m[1;33m.[0m[0mpydata[0m[1;33m.[0m[0morg[0m[1;33m/[0m[0mpandas[0m[1;33m-[0m[0mdocs[0m[1;33m/[0m[0mstable[0m[1;33m/[0m[0mreference[0m[1;33m/[0m[0mapi[0m[1;33m/[0m[0mpandas[0m[0;31m\[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1566[0m [1;33m.[0m[0mDataFrame[0m[1;33m.[0m[0mmerge[0m[1;33m.[0m[0mhtml[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1567[0m         [1;32mfor[0m [0mmore[0m [0mdetails[0m[1;33m.[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1568[0m         """
[1;32m-> 1569[1;33m         [0mresult[0m [1;33m=[0m [0mDataFrame[0m[1;33m.[0m[0mmerge[0m[1;33m([0m[0mself[0m[1;33m,[0m [1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1570[0m         [0mgeo_col[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_geometry_column_name[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1571[0m         [1;32mif[0m [0misinstance[0m[1;33m([0m[0mresult[0m[1;33m,[0m [0mDataFrame[0m[1;33m)[0m [1;32mand[0m [0mgeo_col[0m [1;32min[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1572[0m             [0mresult[0m[1;33m.[0m[0m__class__[0m [1;33m=[0m [0mGeoDataFrame[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\miniconda3\Lib\site-packages\pandas\core\frame.py[0m in [0;36m?[1;34m(self, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)[0m
[0;32m   9839[0m         [0mvalidate[0m[1;33m:[0m [0mstr[0m [1;33m|[0m [1;32mNone[0m [1;33m=[0m [1;32mNone[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   9840[0m     ) -> DataFrame:
[0;32m   9841[0m         [1;32mfrom[0m [0mpandas[0m[1;33m.[0m[0mcore[0m[1;33m.[0m[0mreshape[0m[1;33m.[0m[0mmerge[0m [1;32mimport[0m [0mmerge[0m[1;33m[0m[1;33m[0m[0m
[0;32m   9842[0m [1;33m[0m[0m
[1;32m-> 9843[1;33m         return merge(
[0m[0;32m   9844[0m             [0mself[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   9845[0m             [0mright[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   9846[0m             [0mhow[0m[1;33m=[0m[0mhow[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\miniconda3\Lib\site-packages\pandas\core\reshape\merge.py[0m in [0;36m?[1;34m(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)[0m
[0;32m    144[0m     [0mcopy[0m[1;33m:[0m [0mbool[0m [1;33m|[0m [1;32mNone[0m [1;33m=[0m [1;32mNone[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    145[0m     [0mindicator[0m[1;33m:[0m [0mstr[0m [1;33m|[0m [0mbool[0m [1;33m=[0m [1;32mFalse[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    146[0m     [0mvalidate[0m[1;33m:[0m [0mstr[0m [1;33m|[0m [1;32mNone[0m [1;33m=[0m [1;32mNone[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    147[0m ) -> DataFrame:
[1;32m--> 148[1;33m     op = _MergeOperation(
[0m[0;32m    149[0m         [0mleft[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    150[0m         [0mright[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    151[0m         [0mhow[0m[1;33m=[0m[0mhow[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\miniconda3\Lib\site-packages\pandas\core\reshape\merge.py[0m in [0;36m?[1;34m(self, left, right, how, on, left_on, right_on, axis, left_index, right_index, sort, suffixes, indicator, validate)[0m
[0;32m    733[0m         (
[0;32m    734[0m             [0mself[0m[1;33m.[0m[0mleft_join_keys[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    735[0m             [0mself[0m[1;33m.[0m[0mright_join_keys[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    736[0m             [0mself[0m[1;33m.[0m[0mjoin_names[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 737[1;33m         ) = self._get_merge_keys()
[0m[0;32m    738[0m [1;33m[0m[0m
[0;32m    739[0m         [1;31m# validate the merge keys dtypes. We may need to coerce[0m[1;33m[0m[1;33m[0m[0m
[0;32m    740[0m         [1;31m# to avoid incompatible dtypes[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\miniconda3\Lib\site-packages\pandas\core\reshape\merge.py[0m in [0;36m?[1;34m(self)[0m
[0;32m   1233[0m                 [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1234[0m                     [1;31m# Then we're either Hashable or a wrong-length arraylike,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1235[0m                     [1;31m#  the latter of which will raise[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1236[0m                     [0mk[0m [1;33m=[0m [0mcast[0m[1;33m([0m[0mHashable[0m[1;33m,[0m [0mk[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1237[1;33m                     [0mleft_keys[0m[1;33m.[0m[0mappend[0m[1;33m([0m[0mleft[0m[1;33m.[0m[0m_get_label_or_level_values[0m[1;33m([0m[0mk[0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1238[0m                     [0mjoin_names[0m[1;33m.[0m[0mappend[0m[1;33m([0m[0mk[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1239[0m             [1;32mif[0m [0misinstance[0m[1;33m([0m[0mself[0m[1;33m.[0m[0mright[0m[1;33m.[0m[0mindex[0m[1;33m,[0m [0mMultiIndex[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1240[0m                 right_keys = [

[1;32m~\miniconda3\Lib\site-packages\pandas\core\generic.py[0m in [0;36m?[1;34m(self, key, axis)[0m
[0;32m   1774[0m             [0mvalues[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mxs[0m[1;33m([0m[0mkey[0m[1;33m,[0m [0maxis[0m[1;33m=[0m[0mother_axes[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m)[0m[1;33m.[0m[0m_values[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1775[0m         [1;32melif[0m [0mself[0m[1;33m.[0m[0m_is_level_reference[0m[1;33m([0m[0mkey[0m[1;33m,[0m [0maxis[0m[1;33m=[0m[0maxis[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1776[0m             [0mvalues[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0maxes[0m[1;33m[[0m[0maxis[0m[1;33m][0m[1;33m.[0m[0mget_level_values[0m[1;33m([0m[0mkey[0m[1;33m)[0m[1;33m.[0m[0m_values[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1777[0m         [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1778[1;33m             [1;32mraise[0m [0mKeyError[0m[1;33m([0m[0mkey[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1779[0m [1;33m[0m[0m
[0;32m   1780[0m         [1;31m# Check for duplicates[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1781[0m         [1;32mif[0m [0mvalues[0m[1;33m.[0m[0mndim[0m [1;33m>[0m [1;36m1[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;31mKeyError[0m: 'neighbourhood'

